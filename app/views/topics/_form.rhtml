<% edit = false
   if !params[:id].blank?
        edit = true
   end -%>

<fieldset>
  <%= error_messages_for 'topic' %>
    <!--[form:topic]-->
        <% if !params[:relate_to_topic].nil? %>
                <%= hidden_field_tag "relate_to_topic", params[:relate_to_topic] %>
        <% end %>
        <% if !params[:index_for_basket].nil? %>
                <%= hidden_field_tag "index_for_basket", params[:index_for_basket] %>
        <% end %>
        <% if edit and @site_admin%>
                <div class="form-element">
                        <label for="topic_basket_id">Move to another basket?</label>
                        <% # TODO: ugly hack till we move this to form.select -%>
                        <%= collection_select('topic', 'basket_id', Basket.find(:all), :id, :name, {:class=>"select"}) %>
                </div>
        <% end -%>
        <% if edit %>
            <%= render :partial => 'topic_types', :locals => {:topic_types => @topic_types} %>
        <% else -%>
            <%= hidden_field_tag 'topic[topic_type_id]', params[:topic][:topic_type_id], "id" => "topic_topic_type_id" %>
        <% end -%>

         <% if show_privacy_controls? %>
         <div class="form-element">
            <label>Privacy</label>
            <ul class="option-list">
               <li><%= radio_button 'topic', :private, false, { :id => "topic_private_false" }.merge((@current_basket.private_default? && @topic.private.nil?) ? Hash.new : { "checked" => "checked" }) %><label for="topic_private_false" class="privacy-label">Public</label> (Can be viewed by everyone)</li>
               <li><%= radio_button 'topic', :private, true, { :id => "topic_private_true" }.merge((@current_basket.private_default? && @topic.private.nil?) ? { "checked" => "checked" } : Hash.new) %><label for="topic_private_true">Private</label> (Can be viewed only by basket members)</li>
            </ul>
         </div>
         <div class="form-element">
            <%= privacy_controls_description -%>
         </div>
         <% else %>
         <%# Use the default %>
         <%= hidden_field 'topic', :private, :value => @topic.private.nil? ? @current_basket.private_default? : @topic.private? -%>
         <% end %>

        <div class="form-element">
                <label class="required" for="topic_title">Title:</label>
                <%= text_field 'topic', 'title', {:class => "text-input"} %>
        </div>
        <div class="form-element">
                <label for="topic_short_summary">Short Summary:</label>
                <%= text_area 'topic', 'short_summary', {:class => "text-area", :cols => 120, :rows => 2 } %>
        </div>

        <div class="form-element">
                <label for="topic_description" class="cleared-right">Description:</label>
                <%= text_area 'topic', 'description', :class => "mceEditor", :cols => 120 %>
                <div class="form-example">
                  Note: forms and javascript are not allowed
                  for security reasons.
                  <% if @site_admin -%>
                  Unless you check the box below.
                  <% end -%>
                </div>
        </div>

        <% if @site_admin -%>
        <div class="form-element"><label for="topic_do_not_sanitize">Allow
            forms and other possible insecure elements and attributes in the HTML?</label>
          <%= check_box 'topic', 'do_not_sanitize', "id" => "topic_do_not_sanitize" %></div>
        <% end -%>

        <div class="form-element">
                <label for="topic_tag_list">Tags (separated by commas):</label>
                <%= text_field 'topic', 'tag_list', {:class => "text-input"} %>
        </div>

        <% if edit
                # this is an edit
                @self_topic_type_and_ancestors = @topic.topic_type.self_and_ancestors
        else
                @self_topic_type_and_ancestors = TopicType.find(params[:topic][:topic_type_id]).self_and_ancestors
        end -%>

        <% @self_topic_type_and_ancestors.each do |topic_type| -%>
                <% form_fields = topic_type.topic_type_to_field_mappings -%>
                <% if form_fields.size > 0 %>
                        <%= render(:partial => 'search/extended_field_mapping',
                                   :collection => form_fields,
                                   :locals => { :edit => edit,
                                                :extended_item => @topic,
                                                :item_key => 'topic'}) %>
                <% end %>
        <% end %>

        <% if edit -%>
                <div class="form-element">
                        <label for="topic_version_comment">Comment on this edit:</label>
                        <%  # delete the last version_comment's value
                            @topic.version_comment = nil -%>
                        <%= text_field 'topic', 'version_comment', {:class => "text-input"} %>
                </div>
        <% end %>
	<%= render :partial => 'license_chooser_or_agreement',:locals => {:item => @topic || Topic.new} %>
        <% # Walter McGinnis (walter@katipo.co.nz), 2006-12-20 %>
        <% # even though we have removed ajaxscaffold, we may need this back if we have other conflicts  %>
        <% # therefore keeping for refence  %>
        <% # if !params[:relate_to_topic] %>
                <% # this is only necessary if there is conflicting ajax stuff %>
                <% #= javascript_tag "tinyMCE.execCommand('mceAddControl', true, 'topic[description]')" %>
        <% # end %>

        <%= hidden_field_tag "topic[basket_id]", @current_basket.id, "id" => "topic_basket_id" if params[:id].nil? %>

<!--[eoform:topic]-->

</fieldset>
