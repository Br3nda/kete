<% display ||= Array.new %>

<div id="advanced_search_dropdown" style="display:none;">

  <table>

    <% if display.include?(:dates) %>
    <tr>
      <td colspan="2" class="header">
        <label for="date_on_or_before"><%= t('search.mini_controls.date') %></label>
      </td>
    </tr>
    <tr>
      <td colspan="2" class="fields"><%= render 'search/refine_by_date' %></td>
    </tr>
    <% end %>

    <% if display.include?(:privacy_type) && logged_in? && Basket.privacy_exists %>
    <tr>
      <td class="header">
        <label for="privacy_type"><%= t('search.mini_controls.privacy') %></label>
      </td>
      <td class="fields">
        <%
        options = %w{ public private }.collect do |privacy_type|
          [t("search.mini_controls.#{privacy_type}"), privacy_type]
        end
        selected = params[:privacy_type] || 'public'
        %>
        <%= select_tag('privacy_type', options_for_select(options, selected)) %>
      </td>
    </tr>
    <% end %>

    <% if display.include?(:item_types) %>
    <tr>
      <td class="header">
        <label for="controller_name_for_zoom_class"><%= t('search.mini_controls.item_type') %></label>
      </td>
      <td class="fields">
        <%
        options = %w{ topics images audio video web_links documents comments }.collect do |item_type|
          [zoom_class_plural_humanize(zoom_class_from_controller(item_type)), item_type]
        end
        selected = params[:controller_name_for_zoom_class].blank? ? 'topics' : params[:controller_name_for_zoom_class]
        %>
        <%= select_tag('controller_name_for_zoom_class', options_for_select(options, selected)) %>
      </td>
    </tr>
    <% end %>

    <% if display.include?(:baskets) && @basket_access_hash.keys.size > 0 %>
    <tr>
      <td colspan="2" class="header">
        <label for="target_basket"><%= t('search.mini_controls.basket_name') %></label>
      </td>
    </tr>
    <tr>
      <td colspan="2" class="fields">
        <%
        options = @basket_access_hash.collect do |basket_urlified_name, value|
          [value[:basket_name], basket_urlified_name.to_s]
        end
        selected = params[:urlified_name]
        %>
        <%= select_tag('target_basket', options_for_select(options, selected)) %>
      </td>
    </tr>
    <% end %>

    <% if display.include?(:sorting) %>
    <tr>
      <td class="header">
        <label for="sort_type"><%= t('search.mini_controls.sorting') %></label>
      </td>
      <td class="fields">
        <% sort_type = (params[:sort_type].blank? and !@current_basket.settings[:sort_order_default].blank?) ? @current_basket.settings[:sort_order_default] : params[:sort_type] %>
        <%= select_tag 'sort_type', Search.all_sort_types(sort_type, 'for')  %>
        <br />
        <div id="sort_direction_field" <%= 'style="display:none"' if (params[:sort_type].blank? || params[:sort_type] == 'none') -%>>
          <label for="sort_direction"><%=t 'search.mini_controls.in_reverse' %></label>
          <% currently_reversed = ((!params[:sort_direction].blank? && params[:sort_direction] == 'reverse') or (params[:sort_type].blank? && @current_basket.settings[:sort_direction_reversed_default] == 'reverse')) %>
          <% currently_disabled = (params[:action] == 'for' && (params[:sort_type].blank? || params[:sort_type] == 'none')) %>
          <input type="checkbox" name="sort_direction" id="sort_direction" value="reverse"<%= ' disabled="true"' if currently_disabled -%><%= ' checked="checked"' if currently_reversed -%> tabindex="1" />
        </div>
        <%= toggle_in_reverse_field_js_helper -%>
      </td>
    </tr>
    <% end %>

    <tr>
      <td colspan="2" class="submit"><%= submit_tag t('search.mini_controls.search') %></td>
    </tr>

  </table>

  <hr />

  <%#TODO: Extract this out to unobtrusive JS %>
  <div class="close"><%= link_to('[x]', '#', :alt => t('search.mini_controls.close'),
                                 :title => t('search.mini_controls.close'),
                                 :onclick => "$('advanced_search_dropdown').hide();") %></div>

  <div class="reset"><input type="reset" value="<%= t('search.mini_controls.clear') %>" /></div>

  <div style="clear:both;"></div>

</div>

<%#TODO: Extract this out to unobtrusive JS %>
<% search_dropdown_link = link_to(image_tag('search.png', :width => 20, :height => 13), '#',
                                  :onclick => "$('advanced_search_dropdown').toggle();
                                              if($('search_terms').value == '#{@default_search_terms_text}') {
                                                $('search_terms').value = '';
                                              }") %>
<%= javascript_tag("$('advanced_search_dropdown_link').insert('#{escape_javascript(search_dropdown_link)}');") %>
